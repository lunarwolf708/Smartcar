# This work is licensed under the MIT license.
# Copyright (c) 2013-2023 OpenMV LLC. All rights reserved.
# https://github.com/openmv/openmv/blob/master/LICENSE
#
# AprilTags Example with Epsilon Calculation
#
# This example detects April Tags and calculates an epsilon value
# for proportional motor control based on the tag's horizontal position.

import sensor
import time
import math

# Initialize the camera sensor
sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QQVGA)  # 160x120 resolution
sensor.skip_frames(time=2000)
sensor.set_auto_gain(False)  # Disable to prevent image washout
sensor.set_auto_whitebal(False)  # Disable to prevent image washout
clock = time.clock()

# Define the horizontal center of the camera as a float
CAMERA_CENTER_X = 160.0 / 2.0  # 80.0 for 160x120 resolution

while True:
    clock.tick()
    img = sensor.snapshot()

    # Look for AprilTags in the snapshot
    for tag in img.find_apriltags():
        # Draw rectangle and cross on detected tag
        img.draw_rectangle(tag.rect, color=(255, 0, 0))  
        img.draw_cross(tag.cx, tag.cy, color=(0, 255, 0))  
        
        # Calculate epsilon value (distance from center) ensuring consistent types
        epsilon = tag.cx - CAMERA_CENTER_X  
        
        # Display tag information and epsilon
        #print("Tag Family: %s, Tag ID: %d, Rotation: %f degrees" % (tag.family(), tag.id(), (180 * tag.rotation()) / math.pi))
        print("Epsilon (Cx - CAMERA_CENTER_X):", epsilon)
        #print("Type of tag.cx:", type(tag.cx()))
        

   # print("FPS:", clock.fps())
