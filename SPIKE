import time
import motor_pair
from hub import port
from BLE_CEEO import Listen

# Constants
Kp = 0.3 
base_speed = 150  

# Pair motors on ports A and B
motor_pair.unpair(motor_pair.PAIR_1)  # Remove any old pairing
motor_pair.pair(motor_pair.PAIR_1, port.A, port.B)

def central(name):   
    try:   
        L = Listen(name, verbose=True)
        if L.connect_up():
            print('L connected')
            last_epsilon = None
            while L.is_connected:
                if L.is_any:
                    received_epsilon = L.read()
                    print(f"Received epsilon: {received_epsilon}")

                    try:
                        # Parse the epsilon value
                        epsilon = float(received_epsilon.strip())
                        
                        # Calculate motor speeds using proportional control
                        correction = int(Kp * epsilon)  # Ensure correction is an integer
                        left_speed = int(base_speed + correction)
                        right_speed = int(base_speed - correction)

                        # Debugging outputs
                        print(f"epsilon: {epsilon}, correction: {correction}")
                        print(f"left_speed: {left_speed}, right_speed: {right_speed}")
                        
                        # Apply motor speeds
                        motor_pair.move_tank(motor_pair.PAIR_1, left_speed, right_speed)

                        # Send back the received epsilon as confirmation
                        if received_epsilon != last_epsilon:
                            last_epsilon = received_epsilon
                            L.send(received_epsilon)
                            print(f"Sent reply: {received_epsilon}")

                    except ValueError as ve:
                        print(f"Invalid epsilon value received: {ve}")
                
                time.sleep(0.5)  # Prevent busy looping
    except Exception as e:
        print(e)
    finally:
        # Stop motors and disconnect
        motor_pair.stop(motor_pair.PAIR_1)
        L.disconnect()
        print('closing up')


# Run the central device
central('Lucy')
